codecs
codecs.open
sys
os
pypinyin
sys
__future__
__future__.unicode_literals
sys
runner
runner.main
__future__.unicode_literals
sys
__future__.unicode_literals
__future__.unicode_literals
argparse
argparse.ArgumentParser
sys
import
import.#
import.noqa
compat
compat.PY2
__future__.unicode_literals
__future__.unicode_literals
compat.PY2
constants
constants.(
constants.#
constants.noqa
core
core.(
core.#
core.noqa
__future__.unicode_literals
copy
copy.deepcopy
itertools
itertools.chain
os
re
warnings
compat.text_type
compat.callable_check
constants.(
utils
utils.simple_seg
utils._replace_tone2_style_dict_to_default
__future__.unicode_literals
__future__.unicode_literals
itertools.chain
re
compat.text_type
compat.bytes_type
constants.RE_HANS
constants.RE_TONE2
__future__.unicode_literals
os
re
import.pinyin_dict
compat.SUPPORT_UCS4
sys
os
pypinyin
__future__.unicode_literals
pytest
pypinyin
pypinyin.(
pypinyin.compat
pypinyin.compat.SUPPORT_UCS4
utils.has_module
__future__.unicode_literals
os
pypinyin.core
#
noqa
__future__.unicode_literals
pypinyin.runner
pypinyin.runner.get_parser
__future__.absolute_import
__future__.print_function
__future__.unicode_literals
__future__.unicode_literals
pypinyin.*
pypinyin.#
pypinyin.noqa
pypinyin.utils
pypinyin.utils.simple_seg
